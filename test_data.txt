# Add User
export BODY='{"name":"federico rosado", "email":"federico@ubstudents.ub.edu.bz", "password":"letmeintest"}' 
curl -d "$BODY" localhost:4000/v1/users

# Activate User
export BODY='{"token": "CIWMQAPE4HVFPJCFPKWMMGDRY4"}'
curl -X PUT -d "$BODY" localhost:4000/v1/users/activate

Generate Token
export BODY='{"email":"federico@edu.bz", "password":"testpass"}'
curl -i -d  "$BODY" localhost:4000/v1/tokens/authentication

# Create Services
export TOKEN='token here'
export BODY='{"title":"Web Hosting", "description":"Host all website with linux or windows"}' 
curl -X POST -H "Authorization: Bearer $TOKEN" -d  "$BODY" localhost:4000/v1/services

# Filter 
curl -H "Authorization: Bearer $TOKEN" "localhost:4000/v1/services?page_size=2&sort=title"
curl -H "Authorization: Bearer $TOKEN" "localhost:4000/v1/services?page_size=2&sort=title&page=2"

# Delete by id
curl -X DELETE -H "Authorization: Bearer $TOKEN" localhost:4000/v1/services/id#

#update Services
export BODY='{"title":"Rack Space", "description":"To manage all services by owner"}'
curl -X PATCH -H "Authorization: Bearer $TOKEN" -d "$BODY" localhost:4000/v1/services/3



*******************************************************
        Requirements
*******************************************************
# Add User --rUser ( Read )     --rwuser ( Read write )

export BODY='{"name":"rwuser", "email":"rwuser@example.com", "password":"rwuserpassword"}' 
curl -d "$BODY" localhost:4000/v1/users

# Activate User
export BODY='{"token": "2X46UR4BODNCJYPYNEXXY56TQY"}'
curl -X PUT -d "$BODY" localhost:4000/v1/users/activate
# 2X46UR4BODNCJYPYNEXXY56TQY

Generate Token
export BODY='{"email":"rwuser@example.com", "password":"rwuserpassword"}'
curl -i -d  "$BODY" localhost:4000/v1/tokens/authentication
# "token": "ZMJABOLNTTGGF443JRDD3LAAKY"

#Check DB

# Read Test Permissions
curl -H "Authorization: Bearer ZMJABOLNTTGGF443JRDD3LAAKY" localhost:4000/v1/services/1

# Write Test Permissions
export TOKEN='ZMJABOLNTTGGF443JRDD3LAAKY'
export BODY='{"title":"Writting Permissions", "description":"Have permission to write"}' 
curl -X POST -H "Authorization: Bearer $TOKEN" -d  "$BODY" localhost:4000/v1/services



*******************************************************
        Testng Permissions
*******************************************************
1) Give all users read permission

INSERT INTO users_permissions
SELECT id, (SELECT id FROM permissions WHERE code = 'rm:read') FROM users;  //WHERE users.id = 12

2) Give user write permission

INSERT INTO users_permissions(user_id, permission_id)
VALUES(
    (SELECT id FROM users WHERE email = 'panda@example.com'),
    (SELECT id FROM permissions WHERE code = 'rm:write')
);

3) List the activated users and their permissions

SELECT email, array_agg(permissions.code) AS permissions
FROM permissions
INNER JOIN users_permissions
ON users_permissions.permission_id = permissions.id
INNER JOIN users
ON users_permissions.user_id = users.id
WHERE users.activated = true
GROUP BY email;

SELECT email, code
FROM users
INNER JOIN users_permissions
ON users.id = users_permissions.user_id
INNER JOIN permissions
ON users_permissions.permission_id = permissions.id;

4) Test the endpoints to verify that the permissions work



*******************************************************
        CORS
*******************************************************
Server:
go run ./cmd/api/ -cors-trusted-origins="http://localhost:9000 http://localhost:9090"

App:
go run ./cmd/demo/cors/basic
go run ./cmd/demo/cors/basic --addr=":9090"  

cors error
go run ./cmd/demo/cors/basic --addr=":9001"  